{"ast":null,"code":"var _jsxFileName = \"/Users/huunguyent./Desktop/untitled folder 2/homework1/src/pages/shared/partials/checkbox/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst randomName = (Math.random() + 1).toString(36).substring(7);\n\nconst Checkbox = _ref => {\n  _s();\n\n  let {\n    options,\n    value,\n    onChange,\n    name = randomName,\n    ...rest\n  } = _ref;\n  const [isChecked, setIsChecked] = useState();\n\n  const toggleCheck = () => {\n    if (onChange) {\n      onChange(!isChecked);\n    }\n  };\n\n  useEffect(() => {\n    console.log(options);\n    setIsChecked(value);\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputCheckboxLabel\",\n      htmlFor: options.id,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        checked: isChecked,\n        hidden: true,\n        type: 'checkbox',\n        name: name,\n        id: options.id,\n        onChange: () => toggleCheck(),\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputCheckbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-white\",\n        children: options.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkbox, \"genmR+czw9MgQiuIZkeT5pXJb8M=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/Users/huunguyent./Desktop/untitled folder 2/homework1/src/pages/shared/partials/checkbox/index.jsx"],"names":["React","useEffect","useState","randomName","Math","random","toString","substring","Checkbox","options","value","onChange","name","rest","isChecked","setIsChecked","toggleCheck","console","log","id","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,qBAAP;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoBC,QAApB,CAA6B,EAA7B,EAAiCC,SAAjC,CAA2C,CAA3C,CAAnB;;AAEA,MAAMC,QAAQ,GAAG,QAMX;AAAA;;AAAA,MANY;AAChBC,IAAAA,OADgB;AAEhBC,IAAAA,KAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA,IAAI,GAAGT,UAJS;AAKhB,OAAGU;AALa,GAMZ;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,EAA1C;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxB,QAAIL,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAAC,CAACG,SAAF,CAAR;AACD;AACF,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAM,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAsC,MAAA,OAAO,EAAED,OAAO,CAACU,EAAvD;AAAA,8BACE;AACE,QAAA,OAAO,EAAEL,SADX;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,IAAI,EAAE,UAHR;AAIE,QAAA,IAAI,EAAEF,IAJR;AAKE,QAAA,EAAE,EAAEH,OAAO,CAACU,EALd;AAME,QAAA,QAAQ,EAAE,MAAMH,WAAW,EAN7B;AAAA,WAOMH;AAPN;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAA8BJ,OAAO,CAACW;AAAtC;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArCD;;GAAMZ,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport './style.module.scss';\n\nconst randomName = (Math.random() + 1).toString(36).substring(7);\n\nconst Checkbox = ({\n  options,\n  value,\n  onChange,\n  name = randomName,\n  ...rest\n}) => {\n  const [isChecked, setIsChecked] = useState();\n\n  const toggleCheck = () => {\n    if (onChange) {\n      onChange(!isChecked);\n    }\n  };\n\n  useEffect(() => {\n    console.log(options);\n    setIsChecked(value);\n  }, [value]);\n\n  return (\n    <div>\n      <label className='inputCheckboxLabel' htmlFor={options.id}>\n        <input\n          checked={isChecked}\n          hidden\n          type={'checkbox'}\n          name={name}\n          id={options.id}\n          onChange={() => toggleCheck()}\n          {...rest}\n        />\n        <div className='inputCheckbox' />\n        <span className='text-white'>{options.text}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}
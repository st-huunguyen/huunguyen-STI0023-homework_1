{"ast":null,"code":"const initialState = {\n  size: null,\n  listTopping: [],\n  orderValue: 0\n};\n\nconst orderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case 'SELECT_SIZE':\n      {\n        const sizeValue = action.payload.price;\n        const toppingValue = state.listTopping.reduce((value, element) => value + element.price, 0);\n        return { ...state,\n          size: action.payload,\n          orderValue: sizeValue + toppingValue\n        };\n      }\n\n    case 'SELECT_TOPPING':\n      {\n        const newList = [...state.listTopping];\n        console.log(newList);\n        const index = newList.findIndex(item => item.id === action.payload.id);\n\n        if (index < 0) {\n          newList.push(action.payload);\n        } else {\n          newList.splice(index, 1);\n        }\n\n        console.log(newList);\n        const sizeValue = state.size.price;\n        const toppingValue = newList.reduce((value, element) => value + element.price, 0);\n        return { ...state,\n          listTopping: newList,\n          orderValue: sizeValue + toppingValue\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"sources":["/Users/huunguyent./Desktop/untitled folder 2/homework1/src/store/reducers/ordered.js"],"names":["initialState","size","listTopping","orderValue","orderReducer","state","action","console","log","type","sizeValue","payload","price","toppingValue","reduce","value","element","newList","index","findIndex","item","id","push","splice"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAKA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,cAAMC,SAAS,GAAGJ,MAAM,CAACK,OAAP,CAAeC,KAAjC;AACA,cAAMC,YAAY,GAAGR,KAAK,CAACH,WAAN,CAAkBY,MAAlB,CAAyB,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,GAAGC,OAAO,CAACJ,KAA7D,EAAoE,CAApE,CAArB;AAEA,eAAO,EACL,GAAGP,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACK,OAFR;AAGLR,UAAAA,UAAU,EAAEO,SAAS,GAAGG;AAHnB,SAAP;AAKD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMI,OAAO,GAAG,CAAC,GAAGZ,KAAK,CAACH,WAAV,CAAhB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACA,cAAMC,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYf,MAAM,CAACK,OAAP,CAAeU,EAArD,CAAd;;AACA,YAAIH,KAAK,GAAG,CAAZ,EAAe;AACbD,UAAAA,OAAO,CAACK,IAAR,CAAahB,MAAM,CAACK,OAApB;AACD,SAFD,MAEO;AACLM,UAAAA,OAAO,CAACM,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACD;;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACA,cAAMP,SAAS,GAAGL,KAAK,CAACJ,IAAN,CAAWW,KAA7B;AACA,cAAMC,YAAY,GAAGI,OAAO,CAACH,MAAR,CAAe,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,GAAGC,OAAO,CAACJ,KAAnD,EAA0D,CAA1D,CAArB;AAEA,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA,WAAW,EAAEe,OAFR;AAGLd,UAAAA,UAAU,EAAEO,SAAS,GAAGG;AAHnB,SAAP;AAKD;;AACD;AACE,aAAOR,KAAP;AA/BJ;AAiCD,CAnCD;;AAoCA,eAAeD,YAAf","sourcesContent":["const initialState = {\n  size: null,\n  listTopping: [],\n  orderValue: 0,\n}\nconst orderReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case 'SELECT_SIZE': {\n      const sizeValue = action.payload.price;\n      const toppingValue = state.listTopping.reduce((value, element) => value + element.price, 0);\n\n      return {\n        ...state,\n        size: action.payload,\n        orderValue: sizeValue + toppingValue,\n      }\n    }\n    case 'SELECT_TOPPING': {\n      const newList = [...state.listTopping];\n      console.log(newList)\n      const index = newList.findIndex(item => item.id === action.payload.id);\n      if (index < 0) {\n        newList.push(action.payload)\n      } else {\n        newList.splice(index, 1);\n      }\n      console.log(newList)\n      const sizeValue = state.size.price;\n      const toppingValue = newList.reduce((value, element) => value + element.price, 0);\n\n      return {\n        ...state,\n        listTopping: newList,\n        orderValue: sizeValue + toppingValue,\n      }\n    }\n    default:\n      return state;\n  }\n};\nexport default orderReducer;\n"]},"metadata":{},"sourceType":"module"}